

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

import sb.dao.ProductoDAO;
import sb.data.ProductoData;

@RestController
@CrossOrigin(origins="http://localhost:4200", allowedHeaders="*")
public class ProductoService {

	private final static Logger logger = LoggerFactory.getLogger(ProductoService.class);

    @Autowired
    ProductoDAO productoDAO;
    
  
    @GetMapping("/product/find/{id}")
    public ResponseEntity<?> findProducto(@PathVariable("id") int id) {
    	try {
    		logger.info(">findProduct("+id+")");
    		ProductoData result = productoDAO.read(id);
    		logger.info("<findProduct:"+result);
            return new ResponseEntity<ProductoData>(result,HttpStatus.OK);
    	} catch (Exception e) {
    		logger.error(e.getMessage(),e);
    		return new ResponseEntity<String>("Error Accessing Data",HttpStatus.INTERNAL_SERVER_ERROR);
    	}
    }
    
    @GetMapping("/product/findAll")
    public ResponseEntity<?> listProducts() {
    	try {
    		logger.info(">findAll(Products)");
            return new ResponseEntity<List<ProductoData>>(productoDAO.findAllProducts(),HttpStatus.OK);
    	} catch (Exception e) {
    		logger.error(e.getMessage(),e);
    		return new ResponseEntity<String>("Error Accessing Data",HttpStatus.INTERNAL_SERVER_ERROR);
    	}
    }
    
    @GetMapping("/product/category/{nome_categoria}")
    public ResponseEntity<?> listProductsByCategory(@PathVariable("nome_categoria")String nome_categoria) {
    	try {
    		logger.info(">findAllByCategory(ProductsByCategory)");
            return new ResponseEntity<List<ProductoData>>(productoDAO.findAllProductsByCategory(nome_categoria),HttpStatus.OK);
    	} catch (Exception e) {
    		logger.error(e.getMessage(),e);
    		return new ResponseEntity<String>("Error Accessing Data",HttpStatus.INTERNAL_SERVER_ERROR);
    	}
    }

}